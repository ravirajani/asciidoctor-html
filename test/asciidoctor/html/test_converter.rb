# frozen_string_literal: true

require "test_helper"
require "pathname"

module Asciidoctor
  module Html
    # Tests the html generated by the converter is correct
    class TestConverter < Minitest::Test; end

    def self.define_test_case(filepath, context, converter)
      attributes = { "imagesdir" => "assets/img" }
      doc = Asciidoctor.load_file(filepath, attributes:)
      html = File.read filepath.sub_ext(".html")
      node = doc.find_by(context: context.to_sym).first

      TestConverter.define_method("test_#{filepath.basename.sub_ext ""}") do
        assert_equal html, converter.public_send("convert_#{context}", node)
      end
    end

    def self.generate_tests(dirpath)
      converter = Asciidoctor::Converter.create "html5"
      context = dirpath.basename.to_s
      dirpath.children.each do |filepath|
        next unless filepath.extname == ".adoc"

        define_test_case filepath, context, converter
      end
    end

    Pathname(__dir__).children.each do |pn|
      next unless pn.directory?

      generate_tests pn
    end
  end
end
