# frozen_string_literal: true

require "test_helper"
require "pathname"

module Asciidoctor
  module Html
    # Tests the html generated by the converter is correct
    class TestConverter < Minitest::Test; end

    def self.define_test_case(filepath, context)
      name = "test_#{filepath.basename.sub_ext ""}"

      TestConverter.define_method(name) do
        converter = Asciidoctor::Converter.create "html5"
        attributes = { "imagesdir" => "assets/img" }
        doc = Asciidoctor.load_file(filepath, attributes:)
        node = doc.find_by(context: context.to_sym).first
        html = File.read filepath.sub_ext(".html")

        assert_equal html, converter.public_send("convert_#{context}", node)
      end
    end

    def self.generate_tests(dirpath)
      context = dirpath.basename.to_s
      dirpath.children.each do |filepath|
        next unless filepath.extname == ".adoc"

        define_test_case filepath, context
      end
    end

    Pathname(__dir__).children.reject do |pn|
      pn.file? || pn.basename.to_s.start_with?("_")
    end.each(&method(:generate_tests))
  end
end
