.mark-dot {
    > .li-mark, figure > figcaption > .li-mark {
        &::after {
            content: '.'; 
        }
    }
}

.mark-round-brackets {
    > .li-mark, figure > figcaption > .li-mark {
        &::before { content: '('; }
        &::after { content: ')'; }
    }
}

.mark-square-brackets {
    > .li-mark, figure > figcaption > .li-mark {
        &::before { content: '['; }
        &::after { content: ']'; }
    }
}

.list {
    @extend .list-unstyled;
    li {
        --paritemsep: 0px;
        display: flex;
        flex-flow: row nowrap;
        gap: 0.5rem;
        align-items: first baseline;
        .li-mark {
            flex: 0 0 1.5rem;
            text-align: right;
        }
        .li-content {
            flex: 1;
        }
        .list:not(.list-roomy) {
            margin-bottom: var(--paritemsep);
        }
    }
}

.list-olist {
    &.pseudocode {
        @mixin pcode-style($initial-gap, $indent) {
            $mark-width: 1.25rem;
            > li {
                gap: $initial-gap;
                > .li-mark {
                    flex: 0 0 $mark-width;
                }
            }
            @for $i from 1 through 3 {
                &.level-#{$i + 1} {
                    margin-left: -($i - 1)*$indent - $initial-gap - $mark-width;
                    > li {
                        gap: $i*$indent + $initial-gap;
                    }
                }
            }
        }

        @include pcode-style($initial-gap: 0.75rem, $indent: 1.5rem);

        @include media-breakpoint-up(sm) {
            @include pcode-style($initial-gap: 0.75rem, $indent: 1.75rem);
        }

        @include media-breakpoint-up(md) {
            @include pcode-style($initial-gap: 1rem, $indent: 2rem);
        }

        .li-mark {
            font-size: 90%;
            color: var(--bs-tertiary-color);
        }
    }
}

.list-ulist {
    &:not(.list-checklist) {
        > li > .li-mark {
            flex: 0 0 0.75rem;
        }
    }
    > li:not(.checked) > .li-mark {
        font-weight: 500;
    }
    &.list-unmarked:not(.list-checklist) {
        > li {
            gap: 0;
            > .li-mark {
                visibility: hidden;
            }
        }
    }
}

.list-roomy {
    $roomyitemsep: 0.375rem;
    --paritemsep: #{$roomyitemsep};
    > li {
        --paritemsep: #{$roomyitemsep};
    }
}

.list-colist {
    --paritemsep: 0px;
    margin-top: calc(-0.5 * var(--blocksep));
}

.dlist {
    --paritemsep: 0.25rem;
    dt {
        font-style: italic;
        margin-bottom: 0;
        font-weight: 600;
    }
    dd {
        margin-left: 0.75rem;
        margin-bottom: 0;
    }
}

.list-wrapper {
    .block-title {
        margin-bottom: var(--paritemsep);      
    }
}

.dlist-wrapper {
    @extend .block;
}

.figlist-wrapper {
    @extend .figbox;
    .figlist {
        margin-bottom: 0;
        @extend .list-unstyled;
        display: flex;
        flex-flow: row wrap;
        gap: 0.75rem;
        justify-content: space-evenly;
        align-items: last baseline;
        li {
            flex: 1;
            .li-mark {
                margin-right: 1ex;
            }
            figure {
                margin-bottom: 0.25rem;
                img {
                    min-width: 300px;
                }
            }
        }
    }
    .figlist-title {
        padding-left: var(--fw-padding);
        padding-right: var(--fw-padding);
        text-align: center;
        @extend .figure-caption;
    }
}
